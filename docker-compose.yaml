services:
  database:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_PASSWORD: P@ssword1
    ports:
      - "7001:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  migrations:
    build:
      context: ./src/database/migrations
    depends_on:
      database:
        condition: service_healthy
    environment:
      POSTGRES_HOST: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssword1
      POSTGRES_DB: memoraid
      
  test-data-seed:
    build:
      context: ./src/database/test-data-seed
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      POSTGRES_HOST: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssword1
      POSTGRES_DB: memoraid

  api:
    build:
      context: ./src/api
      dockerfile: ./Memoraid.WebApi/Dockerfile
    container_name: api
    ports:
      - "7000:8080"
    depends_on:
      test-data-seed:
        condition: service_completed_successfully
    environment:
      ConnectionStrings__Postgres: "Host=database;Port=5432;Username=postgres;Password=P@ssword1;Database=memoraid"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/openapi/v1.json"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  firebase:
    build:
      context: ./src/app/docker/firebase
    container_name: firebase
    ports:
      - "7003:4000"
      - "7004:9099"
      - "9099:9099"
    volumes:
      - ./src/app/docker/firebase/firebase.json:/home/node/firebase.json
      - ./src/app/docker/firebase/seed:/home/node/seed
    command: firebase emulators:start --project demo-memoraid --import=/home/node/seed
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9099 | grep -q '\"ready\": true'"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./src/app
      dockerfile: ./docker/Dockerfile
    container_name: app
    ports:
      - "7002:80"
    depends_on:
      api:
        condition: service_healthy
      firebase:
        condition: service_healthy